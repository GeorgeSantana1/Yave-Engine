#version 450

#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout(local_size_x = 1) in;

layout(set = 0, binding = 0) uniform sampler2D in_depth;
layout(set = 0, binding = 1) uniform sampler2D in_color;
layout(set = 0, binding = 2) uniform sampler2D in_normal;

//layout(rgba8) uniform writeonly image2D out_color;


float saturate(float x) {
	return min(1.0, max(0.0, x));
}

vec3 fetch_normal(sampler2D normal_tex, ivec2 pos) {
	return textureLod(in_normal, pos, 0).xyz * 2.0 - vec3(1.0);
}

void main() {
	ivec2 pixel_coord = ivec2(gl_GlobalInvocationID.xy * gl_NumWorkGroups.xy);
	
	vec3 light_dir = normalize(vec3(1, 1, 1));
	vec3 normal = fetch_normal(in_normal, pixel_coord);
	
	float lambert = saturate(dot(normal, light_dir));
	
	//imageStore(out_color, pixel_coord, vec4(lambert));
}


