#version 450

#include "yave.glsl"

layout(local_size_x = 1, local_size_y = 1) in;

layout(set = 0, binding = 0) writeonly buffer ToneMapping {
	ToneMappingParams params;
} params;

layout(set = 0, binding = 1) uniform usampler2D in_histogram;

void main() {
	const int histogram_size = textureSize(in_histogram, 0).x;

	uint total_samples = 0;
	for(int i = histogram_size - 1; i != -1; --i) {
		uint bin = texelFetch(in_histogram, ivec2(i, 0), 0).r;
		total_samples += bin;
	}

	float white_point = -1.0;
	float average = 0.0;
	for(int i = histogram_size - 1; i != -1; --i) {
		float bin_lum = exp(i - 16);
		uint bin = texelFetch(in_histogram, ivec2(i, 0), 0).r;

		average += bin_lum * (bin / float(total_samples));
		if(white_point < 0.0 && bin != 0) {
			white_point = bin_lum;
		}
	}

	params.params.avg_log_luminance = average;
	params.params.white_point = white_point;
}

