#version 450

#include "ibl_convolution.glsl"

layout(local_size_x = 16, local_size_y = 16) in;

layout(set = 0, binding = 0) uniform sampler2D in_envmap;
layout(rgba8, set = 0, binding = 1) uniform writeonly imageCube out_image;

layout(push_constant) uniform PushConstants {
	float roughness;
} constants;


void main() {
	vec2 coord = ivec2(gl_GlobalInvocationID.xy);
	vec2 uv = (gl_GlobalInvocationID.xy + vec2(0.5)) / vec2(imageSize(out_image).xy);

	for(uint i = 0; i != 6; ++i) {
		vec3 local_dir = normalize(cube_dir(uv, i));

		vec3 conv = constants.roughness <= 0.0
					? texture(in_envmap, sphere_map(local_dir)).rgb
					: constants.roughness >= 1.0
						? diffuse_convolution(in_envmap, local_dir)
						: specular_convolution(in_envmap, local_dir, constants.roughness);

		imageStore(out_image, ivec3(coord, i), vec4(conv, 0.0));
	}
}
